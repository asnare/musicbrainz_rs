[package]
name = "musicbrainz_rs"
version = "0.9.0"
authors = ["okno <paul.delafosse@protonmail.com>", "RustyNova"]
repository = "https://github.com/RustyNova016/musicbrainz_rs"
documentation = "https://docs.rs/musicbrainz_rs"
edition = "2021"
license = "MIT"
readme = "README.md"
description = """
MusicBrainz Rust is a utility crate for the
MusicBrainz API.
"""
rust-version = "1.71.1"

[badges]
travis-ci = { repository = "RustyNova016/musicbrainz_rs", branch = "master" }

[dependencies]
serde = { version = "1.0.203", features = ["derive"] }
serde_json = "1.0.117"
reqwest = { version = "0.12.5", default-features = false, features = ["json"] }
chrono = { version = "0.4.38", features = ["serde"] }
once_cell = "1.19.0"
lucene_query_builder = "^0.3.0"
thiserror = "2.0.3"
governor = { version = "0.8.0", optional = true }  
tokio = { version = "1.38.0", optional = true , features = ["macros", "rt", "rt-multi-thread"] }
regex = { version = "1.11.1", optional = true}

[build-dependencies]
glob = "0.3.1"

[dev-dependencies]
tokio = { version = "1.38.0", features = ["macros", "rt-multi-thread"] }
serial_test = "3.1.1"
futures = "0.3.31"

[features]
default = ["reqwest/default-tls", "async", "rate_limit"]
async = ["tokio"]
rustls = ["reqwest/rustls-tls"]
blocking = ["reqwest/blocking"]
rate_limit = ["governor", "async"]
legacy_serialize = []
extras = ["regex"]

# Alternate default for development
#default = ["reqwest/default-tls", "blocking"]
#default = ["reqwest/default-tls", "async"]

[[example]]
required-features = ["blocking"]
name = "fetch_artist"
path = "examples/blocking/fetch_artist.rs"

[[example]]
required-features = ["blocking"]
name = "includes"
path = "examples/blocking/includes.rs"

[[example]]
required-features = ["blocking"]
name = "browse"
path = "examples/blocking/browse.rs"

[[example]]
required-features = ["blocking"]
name = "search"
path = "examples/blocking/search_artist.rs"

[[example]]
required-features = ["blocking"]
name = "fetch_release_coverart"
path = "examples/blocking/fetch_release_coverart.rs"

[[example]]
required-features = ["blocking"]
name = "set_user_agent"
path = "examples/blocking/set_user_agent.rs"

[[example]]
required-features = ["async"]
name = "fetch_artist_async"
path = "examples/async/fetch_artist.rs"

[[example]]
required-features = ["async"]
name = "includes_async"
path = "examples/async/includes.rs"

[[example]]
required-features = ["async"]
name = "browse_async"
path = "examples/async/browse.rs"

[[example]]
required-features = ["async"]
name = "search_async"
path = "examples/async/search_artist.rs"

[[example]]
required-features = ["async"]
name = "fetch_release_coverart_async"
path = "examples/async/fetch_release_coverart.rs"

[[example]]
required-features = ["async"]
name = "set_user_agent_async"
path = "examples/async/set_user_agent.rs"

[[test]]
name = "all"
path = "tests/tests.rs"

[package.metadata.docs.rs]
cargo-args = ["-Zunstable-options", "-Zrustdoc-scrape-examples"]
